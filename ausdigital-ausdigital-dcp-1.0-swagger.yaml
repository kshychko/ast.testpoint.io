swagger: '2.0'
info:
  version: '1.0'
  title: Digital Capability Publisher (DCP) interface specification
  description: |
    The "Digital Capability Publisher" (DCP) provides the ability to discover detailed service information and associated digital certificates for any known business identifier. 

    Please mind the test installation and ensure data validity - some of such installations have data like in production, with real businesses, but this data is not guaranteed to be valid and may be changed in development purposes; do not rely on data from specific hostname to real-world production installation until service owners specifically said it's true and valid. For example, any *.testpoint.io installations have the test data and can't be used in production.

    This API specification should be valid for all supporting installations and implementations.

    If you want OASIS XML output:
    * pass Accept header with 'application/xml' or 'text/xml' value
    * pass ?format=xml as GET query parameter

    OASIS-compliant urls also supported (but it is strongy recommended to implement json, just because JSON is more flexible and contains more information). Examples:

    * https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307?format=xml
    * https://dcp.testpoint.io/urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307/service/dbc::invoice?format=xml
      
    Despite Oasis SMP standard prohibit using SSL/TLS, DPC implementation speicfication defines HTTPS as a signle supported protocol.  
    Please note that JSON format differs from specification XML and has more data in it.

    If you want to do any authenticated test requests then it's better to use CURL, not Swaggerhub website.
host: dcp.testpoint.io
schemes:
  - https
basePath: /
securityDefinitions:
  JWT:
    type: apiKey
    description: |
      JWT token value prepended by `JWT`, for example: 
      `JWT XXXXX.YYYYYYYYYYYYYYYYYYYYYYY.ZZZZZZ`
      You can get your JWT for testpoint.io services at https://idp.testpoint.io/
    in: header
    name: Authorization
produces:
  - application/json
  - application/xml
  - text/html
  - text/xml
parameters:
  fingerprintParameter:
    name: fingerprint
    in: path
    description: value of fingerprint (should be not less than 40 characteres)
    required: true
    type: string
    default: ''
  participantIdUrlParameter:
    name: participant_id
    in: path
    description: 'The participant identifier. Comprises the identifier, and an identifier scheme. This identifier MUST have the same value of the {id} part of the URI of the enclosing ServiceMetadata resource.'
    required: true
    type: string
    default: 'urn:oasis:names:tc:ebcore:partyid-type:iso6523:0151::22341388307'
  documentIdUrlParameter:
    name: document_id
    in: path
    description: 'Represents the type of document that the recipient is able to receive. The document is represented by an identifier (identifying the document type) and an identifier scheme, which the format of the identifier itself.'
    required: true
    type: string
    default: 'dbc::invoice'
  acceptHeader:
    name: Accept
    in: header
    description: accept header
    required: false
    type: string
    default: application/json
    enum:
      - application/json
      - application/xml
      - text/html
      - text/xml
  contentTypeHeader:
    name: Content-Type
    in: header
    description: content type header
    required: true
    type: string
    default: application/json
    enum:
      - application/json
      - application/xml
      - text/html
      - text/xml
  notRevokedBefore:
    name: notRevokedBefore
    in: query
    description: Filter parameter for keys never revoked or revoked lately than given time (in ISO 8601 format)
    required: false
    type: string
    format: date-time
    default: '2017-03-02T00:00:00.00000000:00'
  published_before:
    name: published_before
    in: query
    description: Filter parameter for keys published before given time (in ISO 8601 format)
    required: false
    type: string
    format: date-time
    default: '2017-03-03T00:00:00.000000+00:00'
responses:
  '200':
    description: The request has been successful
  '201':
    description: The request has been fulfilled and has resulted in one or more new resources being created.
    headers:
      location:
        type: string
        description: The location of the created resource. Should match the resource location used to create it.
      date:
        type: string
        description: The date and time that the message was originated.
  '400':
    description: The server cannot or will not process the request due to something that is perceived to be a client error.
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  '403':
    description: 'The server understood the request, but is refusing to fulfill it. Return this if there is a problem with the client certificate.'
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  '404':
    description: The origin server did not find a current representation of the target resource or is not willing to disclose that one exists.
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  '406':
    description: The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  '500':
    description: Internal server error; no action required; may help to retry request later or contact support.
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  403-key:
    description: |
      * Participant id {participant_id}} not available for given user - not business owner
      * Invalid auth header. No credentials provided.
      * Badly formed JWT
      * Invalid Authorization header. JWT Signature verification failed.
    schema:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/definitions/error'
  204-create:
    description: 'The resource already existed and nothing happened if the body was empty. If the body was not empty and the participant identifier matched the UR, the resource is updated.'
    headers:
      date:
        type: string
        description: The date and time that the message was originated.
  204-delete:
    description: The resource has been removed.
    headers:
      date:
        type: string
        description: The date and time that the message was originated.
paths:
  '/{participant_id}':
    get:
      tags:
        - service group
      summary: Service Group Info
      description: Get Service Group Info
      operationId: getServiceGroup
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/acceptHeader'
      responses:
        '200':
          description: Participant Information
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/serviceGroup'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    put:
      tags:
        - service group
      summary: Create/Update Service Group Info
      description: Create/Update Service Group Info
      operationId: createServiceGroup
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/contentTypeHeader'
      responses:
        '200':
          $ref: '#/responses/200'
        '204':
          $ref: '#/responses/204-create'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
    delete:
      tags:
        - service group
      summary: Delete Service Group Info
      description: Delete Service Group Info
      operationId: deleteServiceGroup
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
      responses:
        '204':
          $ref: '#/responses/204-delete'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  '/{participant_id}/service/{document_id}':
    get:
      tags:
        - service metadata
      summary: Service Metadata
      description: Get Signed Service Metadata
      operationId: getSignedServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
        - $ref: '#/parameters/acceptHeader'
      responses:
        '200':
          description: Service Metadata Information
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/serviceMetadata'
        '404':
          $ref: '#/responses/404'
        '406':
          $ref: '#/responses/406'
        '500':
          description: Internal server error
    put:
      tags:
        - service metadata
      summary: Create/Update Service Metadata
      description: Create/Update Service Metadata
      operationId: createServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
        - $ref: '#/parameters/contentTypeHeader'
      responses:
        '200':
          $ref: '#/responses/200'
        '204':
          $ref: '#/responses/204-create'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403'
        '500':
          $ref: '#/responses/500'
    delete:
      tags:
        - service metadata
      summary: Delete Service Group Info
      description: Delete Service Group Info
      operationId: deleteServiceMetadata
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/documentIdUrlParameter'
      responses:
        '204':
          $ref: '#/responses/204-delete'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  '/{participant_id}/keys/':
    get:
      tags:
        - keys
      summary: Get keys information
      description: Returns information about keys for particular business
      operationId: getKeysInfo
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/notRevokedBefore'
        - $ref: '#/parameters/published_before'
      responses:
        '200':
          headers:
            Content-Type:
              type: string
          description: Participant Keys Information
          schema:
            $ref: '#/definitions/keyDetailList'
        '400':
          $ref: '#/responses/400'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    post:
      tags:
        - keys
      summary: Create keys for business
      operationId: createKeysInfo
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - description: New public key info
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/keyDetailPost'
      security:
        - JWT: []
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/keyDetail'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403-key'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
  '/{participant_id}/keys/{fingerprint}/':
    get:
      tags:
        - keys by fingerprint
      summary: Get keys information by fingerprint
      description: Returns information about key for particular business with given fingerprint
      operationId: getKeysDetailByFingerprint
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/fingerprintParameter'
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              type: string
          schema:
            $ref: '#/definitions/keyDetail'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
    patch:
      tags:
        - keys by fingerprint
      summary: Edit "revoke" parameter for given key
      operationId: editKey
      parameters:
        - $ref: '#/parameters/participantIdUrlParameter'
        - $ref: '#/parameters/fingerprintParameter'
        - description: Public key info
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/revokeDetail'
      security:
        - JWT: []
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/keyDetail'
        '400':
          $ref: '#/responses/400'
        '403':
          $ref: '#/responses/403-key'
        '404':
          $ref: '#/responses/404'
        '500':
          $ref: '#/responses/500'
definitions:
  serviceGroup:
    properties:
      serviceMetadataReferenceCollection:
        type: array
        items:
          type: string
      extension:
        type: object
      name:
        type: string
  serviceMetadata:
    required:
      - participantIdentifier
    properties:
      participantIdentifier:
        type: array
        items:
          $ref: '#/definitions/participantIdentifier'
      documentIdentifier:
        $ref: '#/definitions/documentIdentifier'
      processList:
        type: array
        items:
          $ref: '#/definitions/process'
  process:
    properties:
      processIdentifier:
        $ref: '#/definitions/processIdentifier'
      serviceEndpointList:
        type: array
        items:
          $ref: '#/definitions/serviceEndpoint'
  serviceEndpoint:
    properties:
      transportProfile:
        type: string
      endpointURI:
        type: string
      requireBusinessLevelSignature:
        type: string
      minimumAuthenticationLevel:
        type: number
      certificate:
        type: string
      serviceDescription:
        type: string
      technicalInformationUrl:
        type: string
      serviceActivationDate:
        type: string
        format: date
      serviceExpirationDate:
        type: string
        format: date
  processIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  documentIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  participantIdentifier:
    properties:
      scheme:
        type: string
        description: The scheme of the identifier
      value:
        type: string
        description: The unique ID within the scheme
  keyDetailList:
    type: array
    items:
      $ref: '#/definitions/keyDetail'
  keyDetail:
    properties:
      published:
        type: string
        format: date-time
      pubKey:
        type: string
      revoked:
        type: string
        format: date-time
      fingerprint:
        type: string
  keyDetailPost:
    properties:
      pubKey:
        type: string
      revoked:
        type: string
        format: date-time
      fingerprint:
        type: string
  revokeDetail:
    properties:
      revoked:
        type: string
        format: date-time
  error:
    description: 'standard error response structure as per jsonapi.org/format/#errors'
    properties:
      link:
        type: string
        description: a URL linking to a full description of the error.
      code:
        type: string
        description: 'an application-specific error code, expressed as a string value.'
      title:
        type: string
        description: 'a short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization.'
      detail:
        type: string
        description: 'a human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized.'
      source:
        description: 'an object containing references to the source of the error, optionally including any of the following'
        properties:
          pointer:
            type: string
            description: 'a JSON Pointer [RFC6901] to the associated entity in the request document [e.g. "/data" for a primary data object, or "/data/attributes/title" for a specific attribute].'
          parameter:
            type: string
            description: a string indicating which URI query parameter caused the error.